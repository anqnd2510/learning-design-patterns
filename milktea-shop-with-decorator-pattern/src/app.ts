// üéØ T√¨nh hu·ªëng
// Qu√°n tr√† s·ªØa b√°n tr√† s·ªØa c∆° b·∫£n nh∆∞ng kh√°ch c√≥ th·ªÉ ch·ªçn th√™m topping nh∆∞: tr√¢n ch√¢u, th·∫°ch, kem cheese,v.v.
// N·∫øu d√πng k·∫ø th·ª´a cho t·∫•t c·∫£ bi·∫øn th·ªÉ (MilkTeaWithPearl, MilkTeaWithCheese, MilkTeaWithCheeseAndPearl...)
// th√¨ s·∫Ω n·ªï tung code v√¨ s·ªë l∆∞·ª£ng class qu√° nhi·ªÅu.
// Decorator Pattern gi·∫£i quy·∫øt b·∫±ng c√°ch: c√≥ 1 l·ªõp MilkTea c∆° b·∫£n, sau ƒë√≥ b·ªçc th√™m c√°c l·ªõp decorator cho t·ª´ng topping.

import { BasicMilkTea } from "./models/BasicMilkTea";
import { Jelly } from "./decorators/Jelly";
import { Cheese } from "./decorators/Cheese";
import { Pearl } from "./decorators/Pearl";

let myDrink = new BasicMilkTea();
myDrink = new Pearl(myDrink);
myDrink = new Cheese(myDrink);
myDrink = new Jelly(myDrink);

let myDrink2 = new BasicMilkTea();
myDrink2 = new Pearl(myDrink2);
myDrink2 = new Cheese(myDrink2);

console.log(myDrink.getDescription()); // "Tr√† s·ªØa, Tr√¢n ch√¢u, Kem cheese, Th·∫°ch"
console.log(myDrink.getCost() + " VND"); // 37000 VND

console.log(myDrink2.getDescription());
console.log(myDrink2.getCost() + " VND");
